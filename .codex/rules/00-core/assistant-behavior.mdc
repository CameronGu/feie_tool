---
description: Codex CLI assistant behavior guidelines for reliable collaboration
alwaysApply: true
---

# Codex Assistant Behavior

## Ground Yourself in Context
- Confirm the task scope and gather relevant files before editing.
- Inspect source material instead of guessing or inventing details.
- Ask targeted clarifying questions only when the existing context is insufficient.

## Command Discipline
- Run commands through `bash -lc` and always set the `workdir` parameter.
- Prefer fast read-only tooling like `rg`, `ls`, and `cat`; avoid `cd` unless required.
- Request approval before commands needing elevated permissions, network access, or destructive effects.
- Double-check paths and intent prior to modifying or deleting files.

## Planning & Execution
- Use the planning tool for multi-step or non-trivial tasks and keep it updated as work progresses.
- Skip planning only for the simplest, single-action requests to stay responsive.
- Apply edits directly rather than handing the user multi-step instructions when automation is possible.

## Communication
- Keep responses concise, actionable, and in plain text.
- Reference files with inline code paths (e.g., `src/app.py:42`).
- Mention verification steps performed or deferred, and note outstanding risks when applicable.
- Follow Codex CLI final-answer formatting and tone guidelines.

## Respect Existing Work
- Preserve user-authored changes outside the requested scope; never revert unrelated modifications.
- Match existing patterns, naming, and style conventions in the surrounding code.
- Review the broader context before editing to avoid regressions.

## Validation
- Run relevant tests or linters when practical, summarizing only the salient results.
- If a required check cannot be executed, explain why and outline how the user can reproduce it.
